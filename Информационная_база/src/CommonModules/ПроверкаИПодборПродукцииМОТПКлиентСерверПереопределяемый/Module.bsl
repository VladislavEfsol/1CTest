
#Область СлужебныйПрограмныйИнтерфейс

// Определяет соответствие проверяемому типу документа, результат возвращает через второй параметр.
//
// Параметры:
//  Контекст        - УправляемаяФорма, ДокументСсылка - Контекст для определения типа документа
//  ЭтоПриобретение - Булево - исходящий признак соответствия проверяемому типу документа.
Процедура ЭтоДокументПриобретения(Контекст, ЭтоПриобретение) Экспорт
	
	ЭтоПриобретение = ИнтеграцияМОТПУНФКлиентСервер.ЭтоДокументПриобретения(Контекст);
	
КонецПроцедуры

// Определяет соответствие проверяемому типу документа, результат возвращает через второй параметр.
//
// Параметры:
//  Контекст - УправляемаяФорма, ДокументСсылка - Контекст для определения типа документа
//  ЭтоЧек   - Булево - исходящий признак соответствия проверяемому типу документа.
Процедура ЭтоЧекККМ(Контекст, ЭтоЧек) Экспорт
	
	ЭтоЧек = ИнтеграцияМОТПУНФКлиентСервер.ЭтоЧекККМ(Контекст);
	
КонецПроцедуры

// Определяет соответствие проверяемому типу документа, результат возвращает через второй параметр.
//
// Параметры:
//  Контекст      - УправляемаяФорма, ДокументСсылка - Контекст для определения типа документа
//  ЭтоЧекВозврат - Булево - исходящий признак соответствия проверяемому типу документа.
Процедура ЭтоЧекККМВозврат(Контекст, ЭтоЧекВозврат) Экспорт
	
	ЭтоЧекВозврат = ИнтеграцияМОТПУНФКлиентСервер.ЭтоЧекККМВозврат(Контекст);
	
КонецПроцедуры

#Область СерииНоменклатуры

// Возвращает через параметр коды статусов, соответствующих не заполненным сериям.
//
// Параметры:
//  СтатусыСерияНеУказана - Массив - Исходящий, коды статусов , соответствующих не заполненным сериям.
Процедура СтатусыСерийСерияНеУказана(СтатусыСерияНеУказана) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
