
#Область ПрограммныйИнтерфейс
// Обновляет заголовки групп реквизитов справочников Номенклатура и Категории номенклатуры
//
Процедура ОбновитьЗаголовкиГрупп(ФормаОбъекта, НаименованиеГруппы = Неопределено) Экспорт
	
	Если НаименованиеГруппы = Неопределено Тогда
		
		ОбновитьЗаголовокУчетнаяИнформация(ФормаОбъекта);
		ОбновитьЗаголовокАлкогольнаяПродукция(ФормаОбъекта);
		ОбновитьЗаголовокЗакупкаИПроизводство(ФормаОбъекта);
		ОбновитьЗаголовокХранение(ФормаОбъекта);
		ОбновитьЗаголовокПрайсЛист(ФормаОбъекта);
		ОбновитьЗаголовокВетис(ФормаОбъекта);
		
		Если ТипЗнч(ФормаОбъекта.Объект) = Тип("СправочникСсылка.Номенклатура") Тогда
			ОбновитьЗаголовокТабак(ФормаОбъекта);
			ОбновитьЗаголовокНаборКомплект(ФормаОбъекта);
		КонецЕсли;
	
	ИначеЕсли НаименованиеГруппы = "УчетнаяИнформация" Тогда
		ОбновитьЗаголовокУчетнаяИнформация(ФормаОбъекта);
	ИначеЕсли НаименованиеГруппы = "НаборКомплект" Тогда
		ОбновитьЗаголовокНаборКомплект(ФормаОбъекта);
	ИначеЕсли НаименованиеГруппы = "АлкогольнаяПродукция" Тогда
		ОбновитьЗаголовокАлкогольнаяПродукция(ФормаОбъекта);
	ИначеЕсли НаименованиеГруппы = "ЗакупкаИПроизводство" Тогда
		ОбновитьЗаголовокЗакупкаИПроизводство(ФормаОбъекта);
	ИначеЕсли НаименованиеГруппы = "Хранение" Тогда
		ОбновитьЗаголовокХранение(ФормаОбъекта);
	ИначеЕсли НаименованиеГруппы = "ПрайсЛист" Тогда
		ОбновитьЗаголовокПрайсЛист(ФормаОбъекта);
	ИначеЕсли НаименованиеГруппы = "Ветис" Тогда
		ОбновитьЗаголовокВетис(ФормаОбъекта);
	ИначеЕсли НаименованиеГруппы = "Табак" Тогда
		ОбновитьЗаголовокТабак(ФормаОбъекта);
	КонецЕсли;
	
КонецПроцедуры

Процедура КонтрольЗначенияРезерваВТекущейСтроке(СтрокаТабличнойЧасти, ДействиеСтроки = "ПриИзмененииКоличестваПроверитьРезерв", Объект = Неопределено, ИмяТЧ = "Запасы") Экспорт
	
	Если СтрокаТабличнойЧасти = Неопределено Тогда Возврат КонецЕсли;
	
	Если ДействиеСтроки = "ПриИзмененииКоличестваПроверитьРезерв" Тогда
		
		Если Не СтрокаТабличнойЧасти.Свойство("Резерв") Тогда Возврат КонецЕсли;
		
		СтрокаТабличнойЧасти.Резерв = ?(СтрокаТабличнойЧасти.Количество < СтрокаТабличнойЧасти.Резерв, СтрокаТабличнойЧасти.Количество, СтрокаТабличнойЧасти.Резерв);
		Возврат;
	КонецЕсли;
	
	Если ДействиеСтроки = "ПриИзмененииРезерваПроверитьКоличество" Тогда
		
		Если Не СтрокаТабличнойЧасти.Свойство("Резерв") или Объект = Неопределено Тогда Возврат КонецЕсли;
		
		Если СтрокаТабличнойЧасти.Резерв > СтрокаТабличнойЧасти.Количество Тогда
			
			ОчиститьСообщения();
			
			ТекстСообщения = НСтр("ru = 'В строке №%1 табл. части значение в колонке ""В резерв"" не может превышать значения в колонке ""Количество"".'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, СтрокаТабличнойЧасти.НомерСтроки);
			УправлениеНебольшойФирмойКлиент.СообщитьОбОшибке(
			Объект,
			ТекстСообщения,
			"Объект."+ИмяТЧ,
			СтрокаТабличнойЧасти.НомерСтроки,
			"Количество",
			Ложь
			);
			
			СтрокаТабличнойЧасти.Резерв = СтрокаТабличнойЧасти.Количество;
			
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСКорзиной

Процедура ЗаполнитьДокумент(СтруктураЗаполнения, ВидДокумента, ДанныеЗаполнения) Экспорт

	МассивРазрешенныхТиповНоменклатуры = Новый Массив;
	РазрешеныНаборы = Ложь;
	Если ВидДокумента = "ЗаказПокупателя" Тогда
		СтруктураЗаполнения.Вставить("ВидОперации",  ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаПродажу"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат"));
		ИмяТабличнойЧасти = "Запасы";
		РазрешеныНаборы = Истина;
	ИначеЕсли ВидДокумента = "СчетНаОплату" Тогда
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат"));
		ИмяТабличнойЧасти = "Запасы";
		РазрешеныНаборы = Истина;
	ИначеЕсли ВидДокумента = "ЗаказНаряд" Тогда
		СтруктураЗаполнения.Вставить("ВидОперации",  ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаказПокупателя.ЗаказНаряд"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ВидРабот"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат"));
		ИмяТабличнойЧасти = "Запасы";
		РазрешеныНаборы = Истина;
	ИначеЕсли ВидДокумента = "АктВыполненныхРабот" Тогда
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа"));
		ИмяТабличнойЧасти = "РаботыИУслуги";
		РазрешеныНаборы = Истина;
	ИначеЕсли ВидДокумента = "РасходнаяНакладная" Тогда
		СтруктураЗаполнения.Вставить("ВидОперации",  ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходнаяНакладная.ПродажаПокупателю"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат"));
		ИмяТабличнойЧасти = "Запасы";
		РазрешеныНаборы = Истина;
	ИначеЕсли ВидДокумента = "ЗаказПоставщику" Тогда
		СтруктураЗаполнения.Вставить("ВидОперации",  ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаказПоставщику.ЗаказНаЗакупку"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат"));
		ИмяТабличнойЧасти = "Запасы";
		РазрешеныНаборы = Ложь;
	ИначеЕсли ВидДокумента = "ПриходнаяНакладная" Тогда
		СтруктураЗаполнения.Вставить("ВидОперации",  ПредопределенноеЗначение("Перечисление.ВидыОперацийПриходнаяНакладная.ПоступлениеОтПоставщика"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		МассивРазрешенныхТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат"));
		ИмяТабличнойЧасти = "Запасы";
		РазрешеныНаборы = Ложь;
	КонецЕсли;
	
	МассивСообщенийОбОшибках = ПолучитьПараметрыЗаполнения(СтруктураЗаполнения, ДанныеЗаполнения, МассивРазрешенныхТиповНоменклатуры, РазрешеныНаборы, ИмяТабличнойЧасти, ВидДокумента);
	
	Если ВидДокумента = "ЗаказНаряд" Тогда
		ОткрытьФорму("Документ.ЗаказПокупателя.Форма.ФормаЗаказНаряда", Новый Структура("ЗначенияЗаполнения", СтруктураЗаполнения));
	Иначе
		ОткрытьФорму("Документ."+ВидДокумента+".ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", СтруктураЗаполнения));
	КонецЕсли;
	
	Для каждого стрОшибка Из МассивСообщенийОбОшибках Цикл
		Сообщить(стрОшибка);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьПараметрыЗаполнения(СтруктураЗаполнения, ДанныеЗаполнения, МассивРазрешенныхТиповНоменклатуры, РазрешеныНаборы, ИмяТабличнойЧасти, ВидДокумента)
	
	МассивСообщенийОбОшибках = Новый Массив;
	
	МассивТоваров 	= Новый Массив;
	МассивУслуг		= Новый Массив;
	МассивРабот		= Новый Массив;
	ВидРабот		= Неопределено;
	Для каждого стрКорзины Из ДанныеЗаполнения Цикл
		
		Если МассивРазрешенныхТиповНоменклатуры.Найти(стрКорзины.ТипНоменклатуры) = Неопределено Тогда
			
			ТекстСообщения = НСтр("ru = '%1: тип номенклатуры <%2> нельзя использовать в документе'");
			МассивСообщенийОбОшибках.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения,
				стрКорзины.Номенклатура,
				стрКорзины.ТипНоменклатуры
				));
			Продолжить;
			
		КонецЕсли;
		
		// Наборы
		Если стрКорзины.Свойство("ЭтоНабор") И стрКорзины.ЭтоНабор И НЕ РазрешеныНаборы  Тогда
			
			ТекстСообщения = НСтр("ru = '%1: наборы нельзя использовать в документе'");
			МассивСообщенийОбОшибках.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения,
				стрКорзины.Номенклатура
				));
			Продолжить;
			
		КонецЕсли;
		// Конец Наборы
		
		структураТовар = Новый Структура("Номенклатура", стрКорзины.Номенклатура);
		Если стрКорзины.Свойство("Характеристика") Тогда
			структураТовар.Вставить("Характеристика", стрКорзины.Характеристика);
		КонецЕсли;
		структураТовар.Вставить("Количество", стрКорзины.Количество);
		структураТовар.Вставить("ЕдиницаИзмерения", стрКорзины.ЕдиницаИзмерения);
		
		Если стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас") Тогда
			структураТовар.Вставить("ТипНоменклатурыЗапас", Истина);
		ИначеЕсли стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат") Тогда
			структураТовар.Вставить("ТипНоменклатурыЗапас", Истина);
		ИначеЕсли стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда
			структураТовар.Вставить("ТипНоменклатурыУслуга", Истина);
			структураТовар.Вставить("КлючСвязи", 0);
		ИначеЕсли стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа") Тогда
			структураТовар.Вставить("КлючСвязи", 0);
		КонецЕсли;
		
		// Наборы
		Если стрКорзины.Свойство("ЭтоНабор") Тогда
			структураТовар.Вставить("ЭтоНабор", стрКорзины.ЭтоНабор);
		КонецЕсли;
		// Конец Наборы
		
		Если СтрКорзины.Свойство("СтранаПроисхождения") Тогда
			СтруктураТовар.Вставить("СтранаПроисхождения", СтрКорзины.СтранаПроисхождения);
		КонецЕсли;
		
		Если стрКорзины.Свойство("Склад") Тогда
			СтруктураТовар.Вставить("СтруктурнаяЕдиница", СтрКорзины.Склад);
		КонецЕсли;
		
		Если стрКорзины.Свойство("Ячейка") Тогда
			СтруктураТовар.Вставить("Ячейка", СтрКорзины.Ячейка);
		КонецЕсли;
		
		Если ВидДокумента="ЗаказНаряд" Тогда
			Если стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ВидРабот") Тогда
				ВидРабот = стрКорзины.Номенклатура;
			ИначеЕсли стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга")
				ИЛИ стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа")
				Тогда
				структураТовар.КлючСвязи = МассивРабот.Количество() + 1;
				МассивРабот.Добавить(структураТовар);
			Иначе
				МассивТоваров.Добавить(структураТовар);
			КонецЕсли;
		ИначеЕсли ВидДокумента="ПриходнаяНакладная" Тогда
			Если стрКорзины.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда
				МассивУслуг.Добавить(структураТовар);
			Иначе
				МассивТоваров.Добавить(структураТовар);
			КонецЕсли;
		Иначе
			МассивТоваров.Добавить(структураТовар);
		КонецЕсли; 
		
	КонецЦикла;
	
	СтруктураЗаполнения.Вставить(ИмяТабличнойЧасти, МассивТоваров);
	
	//Для Заказ-Наряда
	СтруктураЗаполнения.Вставить("ВидРабот", ВидРабот);
	СтруктураЗаполнения.Вставить("Работы", МассивРабот);
	
	//Для Приходной накладной
	СтруктураЗаполнения.Вставить("Расходы", МассивУслуг);
	
	Возврат МассивСообщенийОбОшибках;
	
КонецФункции

Процедура ОформитьДокументСТоварамиИзКорзины(ПараметрыВыполненияКоманды, ВидДокумента, ДанныеЗаполнения = Неопределено) Экспорт
	
	Форма = ПараметрыВыполненияКоманды.Источник;
	ПараметрыЗаполнения = Новый Структура;
	Если ДанныеЗаполнения = Неопределено Тогда
		СтрокиНоменклатуры = Форма.Корзина;
	Иначе
		СтрокиНоменклатуры = ДанныеЗаполнения;
	КонецЕсли;
	
	ПараметрыЗаполнения.Вставить("ВидЦен",  Форма.ОтборВидЦен);
	Если ЗначениеЗаполнено(Форма.ОтборСклад) Тогда
		ПараметрыЗаполнения.Вставить("СтруктурнаяЕдиница",  Форма.ОтборСклад);
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.НалогообложениеНДС) Тогда
		ПараметрыЗаполнения.Вставить("НалогообложениеНДС",  Форма.НалогообложениеНДС);
		ПараметрыЗаполнения.Вставить("ИспользуетсяНДС",  Форма.ИспользуетсяНДС);
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.ВалютаПодбора) Тогда
		ПараметрыЗаполнения.Вставить("Валюта",  Форма.ВалютаПодбора);
	КонецЕсли;
	
	НоменклатураВДокументахКлиент.ЗаполнитьДокумент(ПараметрыЗаполнения, ВидДокумента, СтрокиНоменклатуры);
	
	Если Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаКорзина" Тогда
		Форма.ПеренестиВДокумент = Истина;
		Форма.Закрыть();
	ИначеЕсли ДанныеЗаполнения = Неопределено Тогда
		Форма.Корзина.Очистить();
		Форма.ОбновитьНадписьПодобраноТоваров();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьРеквизитыСтрокСписка(ПараметрыВыполненияКоманды, ВидДокумента) Экспорт

	ИмяСписка = ПараметрыВыполненияКоманды.Источник.ТекущаяСтраницаНоменклатуры;
	ТаблицаФормы = ПараметрыВыполненияКоманды.Источник.Элементы[ИмяСписка];
	МассивВыделенныхСтрок = ТаблицаФормы.ВыделенныеСтроки;
	
	МассивСтрок = Новый Массив;
	Для каждого стр Из МассивВыделенныхСтрок Цикл
		ДанныеСтроки = ТаблицаФормы.ДанныеСтроки(стр);
		Если ДанныеСтроки=Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураРеквизитовСписка = Новый Структура;
		СтруктураРеквизитовСписка.Вставить("Номенклатура", ДанныеСтроки.Номенклатура);
		СтруктураРеквизитовСписка.Вставить("Количество", 1);
		СтруктураРеквизитовСписка.Вставить("Цена", ДанныеСтроки.Цена);
		СтруктураРеквизитовСписка.Вставить("ЕдиницаИзмерения", ДанныеСтроки.ЕдиницаИзмерения);
		СтруктураРеквизитовСписка.Вставить("ТипНоменклатуры", ДанныеСтроки.ТипНоменклатуры);
		Если ДанныеСтроки.Свойство("СтавкаНДС") Тогда
			СтруктураРеквизитовСписка.Вставить("СтавкаНДС", ДанныеСтроки.СтавкаНДС);
		Иначе
			СтруктураРеквизитовСписка.Вставить("СтавкаНДС", НоменклатураВДокументахСервер.СтавкаНоменклатуры(ДанныеСтроки.Номенклатура));
		КонецЕсли;
		СтруктураРеквизитовСписка.Вставить("СтранаПроисхождения", ДанныеСтроки.СтранаПроисхождения);
		СтруктураРеквизитовСписка.Вставить("ЭтоНабор", ДанныеСтроки.ЭтоНабор);
		СтруктураРеквизитовСписка.Вставить("Склад", ДанныеСтроки.Склад);
		СтруктураРеквизитовСписка.Вставить("Ячейка", ДанныеСтроки.Ячейка);
		Если ДанныеСтроки.Свойство("Характеристика") Тогда
			СтруктураРеквизитовСписка.Вставить("Характеристика", ДанныеСтроки.Характеристика);
		Иначе
			СтруктураРеквизитовСписка.Вставить("Характеристика", НоменклатураВДокументахСервер.ЗначенияНоменклатурыПоУмолчанию(ДанныеСтроки.Номенклатура));
		КонецЕсли;
		
		МассивСтрок.Добавить(СтруктураРеквизитовСписка);
	КонецЦикла; 
	
	НоменклатураВДокументахКлиент.ОформитьДокументСТоварамиИзКорзины(ПараметрыВыполненияКоманды, ВидДокумента, МассивСтрок);

КонецПроцедуры

Процедура ПодготовитьРеквизитыСтрокиПоЭлементу(ПараметрыВыполненияКоманды, ВидДокумента) Экспорт
	
	НоменклатураОбъект = ПараметрыВыполненияКоманды.Источник.Объект;
	СтруктураРеквизитовСписка = Новый Структура;
	СтруктураРеквизитовСписка.Вставить("Номенклатура", НоменклатураОбъект.Ссылка);
	СтруктураРеквизитовСписка.Вставить("Количество", 1);
	СтруктураРеквизитовСписка.Вставить("Цена", 0);
	СтруктураРеквизитовСписка.Вставить("ЕдиницаИзмерения", НоменклатураОбъект.ЕдиницаИзмерения);
	СтруктураРеквизитовСписка.Вставить("ТипНоменклатуры", НоменклатураОбъект.ТипНоменклатуры);
	СтруктураРеквизитовСписка.Вставить("СтавкаНДС", НоменклатураВДокументахСервер.СтавкаНоменклатуры(НоменклатураОбъект.Ссылка));
	СтруктураРеквизитовСписка.Вставить("СтранаПроисхождения", НоменклатураОбъект.СтранаПроисхождения);
	СтруктураРеквизитовСписка.Вставить("ЭтоНабор", НоменклатураОбъект.ЭтоНабор);
	СтруктураРеквизитовСписка.Вставить("Склад", НоменклатураОбъект.Склад);
	СтруктураРеквизитовСписка.Вставить("Ячейка", НоменклатураОбъект.Ячейка);
	
	СтруктураРеквизитовСписка.Вставить("Характеристика", НоменклатураВДокументахСервер.ЗначенияНоменклатурыПоУмолчанию(НоменклатураОбъект.Ссылка));
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтруктураРеквизитовСписка);
	
	ПараметрыЗаполнения = Новый Структура;
	Если ВидДокумента = "ЗаказПоставщику" Тогда
		Если ЗначениеЗаполнено(НоменклатураОбъект.Поставщик) Тогда
			ПараметрыЗаполнения.Вставить("Контрагент", НоменклатураОбъект.Поставщик);
		КонецЕсли;
	ИначеЕсли ВидДокумента = "ПриходнаяНакладная" Тогда
		Если ЗначениеЗаполнено(НоменклатураОбъект.Поставщик) Тогда
			ПараметрыЗаполнения.Вставить("Контрагент", НоменклатураОбъект.Поставщик);
		КонецЕсли;
	КонецЕсли;
	
	НоменклатураВДокументахКлиент.ЗаполнитьДокумент(ПараметрыЗаполнения, ВидДокумента, МассивСтрок);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьЗаголовокУчетнаяИнформация(ФормаОбъекта)
	
	Если Не ФормаОбъекта.Элементы.ГруппаУчетнаяИнформация.Видимость Тогда Возврат КонецЕсли;
	
	ТекстЗаголовка = "Учетная информация";
	ДополнениеЗаголовка = "";
	
	Если ТипЗнч(ФормаОбъекта.Объект.Ссылка) = Тип("СправочникСсылка.КатегорииНоменклатуры") Тогда
		ТипНоменклатуры = ФормаОбъекта.Объект.ТипНоменклатурыПоУмолчанию;
	Иначе
		ТипНоменклатуры = ФормаОбъекта.Объект.ТипНоменклатуры;
	КонецЕсли;
	
	ОтобразитьМетодОценки = Истина;
	
	Если Не ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Запас")
		И Не ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат")
		Тогда
		ОтобразитьМетодОценки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФормаОбъекта.Объект.НаправлениеДеятельности) Тогда
		ДополнениеЗаголовка = ДополнениеЗаголовка + Строка(ФормаОбъекта.Объект.НаправлениеДеятельности);
	КонецЕсли;
	
	Если ОтобразитьМетодОценки и ЗначениеЗаполнено(ФормаОбъекта.Объект.МетодОценки) Тогда
		ДополнениеЗаголовка = ДополнениеЗаголовка + ?(ЗначениеЗаполнено(ДополнениеЗаголовка), ", ", "") +Строка(ФормаОбъекта.Объект.МетодОценки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФормаОбъекта.Объект.ВидСтавкиНДС) Тогда
		
		СтавкаНДС = ФормаОбъекта.Элементы.ВидСтавкиНДС.СписокВыбора.НайтиПоЗначению(ФормаОбъекта.Объект.ВидСтавкиНДС);
		
		ДополнениеЗаголовка = ДополнениеЗаголовка + ?(ЗначениеЗаполнено(ДополнениеЗаголовка), ", ", "") + Строка(СтавкаНДС);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДополнениеЗаголовка) Тогда
		ТекстЗаголовка = ТекстЗаголовка +" ("+ДополнениеЗаголовка+")";
	КонецЕсли;
	
	ФормаОбъекта.Элементы.ГруппаУчетнаяИнформация.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

Процедура ОбновитьЗаголовокНаборКомплект(ФормаОбъекта)
	
	Если Не ФормаОбъекта.Элементы.ГруппаНаборы.Видимость Тогда Возврат КонецЕсли;
	
	ТекстЗаголовка = "Набор / комплект";
	ДополнениеЗаголовка = "";
	
	Если ФормаОбъекта.Объект.ЭтоНабор Тогда
		ДополнениеЗаголовка = " (Это набор)";
	КонецЕсли;
	
	ТекстЗаголовка = ТекстЗаголовка + ДополнениеЗаголовка;
	
	ФормаОбъекта.Элементы.ГруппаНаборы.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

Процедура ОбновитьЗаголовокАлкогольнаяПродукция(ФормаОбъекта)
	
	Если Не ФормаОбъекта.Элементы.ГруппаАлкогольнаяПродукция.Видимость Тогда Возврат КонецЕсли;
	
	ТекстЗаголовка = "Алкогольная продукция";
	ДополнениеЗаголовка = "";
	
	Если ЗначениеЗаполнено(ФормаОбъекта.Объект.ВидАлкогольнойПродукции) Тогда
		ДополнениеЗаголовка = ДополнениеЗаголовка + Строка(ФормаОбъекта.Объект.ВидАлкогольнойПродукции);
	КонецЕсли;
	
	Если ТипЗнч(ФормаОбъекта.Объект) = Тип("СправочникСсылка.Номенклатура") И ЗначениеЗаполнено(ФормаОбъекта.Объект.Производитель) Тогда
		ДополнениеЗаголовка = ДополнениеЗаголовка + ?(ЗначениеЗаполнено(ДополнениеЗаголовка), ", ", "") +Строка(ФормаОбъекта.Объект.Производитель);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДополнениеЗаголовка) Тогда
		ТекстЗаголовка = ТекстЗаголовка +" ("+ДополнениеЗаголовка+")";
	КонецЕсли;
	
	ФормаОбъекта.Элементы.ГруппаАлкогольнаяПродукция.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

Процедура ОбновитьЗаголовокЗакупкаИПроизводство(ФормаОбъекта)
	
	Если Не ФормаОбъекта.Элементы.ГруппаЗакупкаПроизводство.Видимость Тогда Возврат КонецЕсли;
	
	ТекстЗаголовка = "Закупка и производство";
	ДополнениеЗаголовка = "";
	
	Если ЗначениеЗаполнено(ФормаОбъекта.Объект.СпособПополнения) Тогда
		ДополнениеЗаголовка = ДополнениеЗаголовка + Строка(ФормаОбъекта.Объект.СпособПополнения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДополнениеЗаголовка) Тогда
		ТекстЗаголовка = ТекстЗаголовка +" ("+ДополнениеЗаголовка+")";
	КонецЕсли;
	
	ФормаОбъекта.Элементы.ГруппаЗакупкаПроизводство.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

Процедура ОбновитьЗаголовокХранение(ФормаОбъекта)
	
	Если Не ФормаОбъекта.Элементы.ГруппаХранение.Видимость Тогда Возврат КонецЕсли;
	
	ТекстЗаголовка = "Хранение";
	ДополнениеЗаголовка = "";
	
	Если ЗначениеЗаполнено(ФормаОбъекта.Объект.Склад) Тогда
		ДополнениеЗаголовка = ДополнениеЗаголовка + Строка(ФормаОбъекта.Объект.Склад);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФормаОбъекта.Объект.Ячейка) Тогда
		ДополнениеЗаголовка = ДополнениеЗаголовка + ?(ЗначениеЗаполнено(ДополнениеЗаголовка), ", ", "") +Строка(ФормаОбъекта.Объект.Ячейка);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДополнениеЗаголовка) Тогда
		ТекстЗаголовка = ТекстЗаголовка +" ("+ДополнениеЗаголовка+")";
	КонецЕсли;
	
	ФормаОбъекта.Элементы.ГруппаХранение.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

Процедура ОбновитьЗаголовокПрайсЛист(ФормаОбъекта)
	
	Если Не ФормаОбъекта.Элементы.ГруппаПрайсЛист.Видимость Тогда Возврат КонецЕсли;
	
	ТекстЗаголовка = "Прайс-лист";
	ДополнениеЗаголовка = "";
	
	Если ЗначениеЗаполнено(ФормаОбъекта.Объект.ЦеноваяГруппа) Тогда
		ДополнениеЗаголовка = ДополнениеЗаголовка + Строка(ФормаОбъекта.Объект.ЦеноваяГруппа);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДополнениеЗаголовка) Тогда
		ТекстЗаголовка = ТекстЗаголовка +" ("+ДополнениеЗаголовка+")";
	КонецЕсли;
	
	ФормаОбъекта.Элементы.ГруппаПрайсЛист.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

Процедура ОбновитьЗаголовокВетис(ФормаОбъекта)
	
	Если Не ФормаОбъекта.Элементы.ГруппаВЕТИС.Видимость Тогда Возврат КонецЕсли;
	
	ТекстЗаголовка = "Подконтрольная продукция (ВЕТИС)";
	ДополнениеЗаголовка = "";
	
	Если ФормаОбъекта.Объект.ПодконтрольнаяПродукцияВЕТИС Тогда
		ДополнениеЗаголовка = " (Это продукция ВЕТИС)";
	КонецЕсли;
	
	ТекстЗаголовка = ТекстЗаголовка + ДополнениеЗаголовка;
	
	ФормаОбъекта.Элементы.ГруппаВЕТИС.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

Процедура ОбновитьЗаголовокТабак(ФормаОбъекта)
	
	Если Не ФормаОбъекта.Элементы.ГруппаТабачнаяПродукция.Видимость Тогда Возврат КонецЕсли;
	
	ТекстЗаголовка = "Табачная продукция";
	ДополнениеЗаголовка = "";
	
	Если ФормаОбъекта.Объект.ЭтоНабор Тогда
		ДополнениеЗаголовка = " (Это табачная продукция)";
	КонецЕсли;
	
	ТекстЗаголовка = ТекстЗаголовка + ДополнениеЗаголовка;
	
	ФормаОбъекта.Элементы.ГруппаТабачнаяПродукция.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

#КонецОбласти
