
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Параметры.Свойство("ИдентификаторКатегории", ИдентификаторКатегории);
	Параметры.Свойство("ИдентификаторРеквизитаКатегории", ИдентификаторРеквизита);
	Параметры.Свойство("ОбъектСопоставления", ОбъектСопоставления);
	Параметры.Свойство("РеквизитОбъекта",     РеквизитОбъекта);
	Параметры.Свойство("ТипЗначения",         ТипЗначения);
	Параметры.Свойство("ТолькоПросмотр",      ТолькоПросмотр);
	
	Если ТолькоПросмотр Тогда
		Элементы.Очистить.Доступность = Ложь;
		Элементы.Записать.Доступность = Ложь;
		Элементы.ЗаполнитьЗначенияРеквизитов.Доступность = Ложь;
		Элементы.ЗаписатьЗакрыть.Доступность = Ложь;
		Элементы.Представление.КартинкаШапки = Новый Картинка;
	КонецЕсли;
	ЗагрузитьЗначенияРеквизитаРубрикатора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьЗакрыть(Команда)
	
	СохранитьИзмененияСервер();
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	СохранитьИзмененияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	Для каждого ЭлементСписка Из Список Цикл
		ЭлементСписка.ПредставлениеЗначенияРеквизитаКатегории = Неопределено;
		ЭлементСписка.ЗначениеНеактуально = Ложь;
	КонецЦикла;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗначенияРеквизита(Команда)
	
	МассивЗначений = Новый Массив;
	Для каждого СтрокаСписка Из Список Цикл
		Если ЗначениеЗаполнено(СтрокаСписка.ПредставлениеЗначенияРеквизитаКатегории)
			И Не СтрокаСписка.ЗначениеНеактуально Тогда
			Продолжить;
		КонецЕсли;
		МассивЗначений.Добавить(СтрокаСписка.Значение);
	КонецЦикла;
	
	Если МассивЗначений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("Значения", МассивЗначений);
	ПараметрыПроцедуры.Вставить("ИдентификаторКатегории", ИдентификаторКатегории);
	ПараметрыПроцедуры.Вставить("ИдентификаторРеквизита", ИдентификаторРеквизита);
	
	ДлительнаяОперация = ПолучитьЗначенияВФоне(ПараметрыПроцедуры);
	
	// Установка картинки длительной операции.
	Если ДлительнаяОперация.Статус = "Выполняется" Тогда
		
		// Инициализация обработчик ожидания завершения.
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Поиск значений реквизитов.'");
		ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
		ПараметрыОжидания.ВыводитьСообщения = Истина;
		ПараметрыОжидания.Вставить("ИдентификаторЗадания", ДлительнаяОперация.ИдентификаторЗадания);
		ОбработкаЗавершенияПоиска = Новый ОписаниеОповещения("ПолучитьЗначенияЗавершение",
			ЭтотОбъект, ПараметрыПроцедуры);
			
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОбработкаЗавершенияПоиска, ПараметрыОжидания);
		
	ИначеЕсли ДлительнаяОперация.Статус = "Выполнено" Тогда
		ПолучитьЗначенияЗавершение(ДлительнаяОперация, ПараметрыПроцедуры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьЗначенияРеквизитаРубрикатора()
	
	Отказ = Ложь;
	
	ОбновитьСписокЗначенийРеквизита();

	ПараметрыМетода = Новый Структура;
	ПараметрыМетода.Вставить("ИдентификаторКатегории", ИдентификаторКатегории);
	ПараметрыМетода.Вставить("ИдентификаторХарактеристики", ИдентификаторРеквизита);
	ПараметрыКоманды = ТорговыеПредложения.ПараметрыКомандыПолучитьЗначенияХарактеристики(ПараметрыМетода, Отказ);
	Результат = БизнесСеть.ВыполнитьКомандуСервиса(ПараметрыКоманды, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ЗначенияРубрикатора Из Результат Цикл
		СписокЗначенийСервиса.Добавить(ЗначенияРубрикатора.Значение, Формат(ЗначенияРубрикатора.Идентификатор, "ЧГ="));
		Элементы.Представление.СписокВыбора.Добавить(ЗначенияРубрикатора.Значение);
	КонецЦикла;
	Элементы.Представление.СписокВыбора.СортироватьПоЗначению();
	
	Для каждого СтрокаСписка Из Список Цикл
		Если ЗначениеЗаполнено(СтрокаСписка.ПредставлениеЗначенияРеквизитаКатегории) Тогда
			// Проверка актуальности данных.
			ЗначениеРубрикатора = СписокЗначенийСервиса.НайтиПоЗначению(СтрокаСписка.ПредставлениеЗначенияРеквизитаКатегории);
			Если ЗначениеРубрикатора = Неопределено Тогда
				СтрокаСписка.ЗначениеНеактуально = Истина;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокЗначенийРеквизита()
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("Значение");
	ТаблицаЗначений.Колонки.Добавить("ИдентификаторЗначенияРеквизитаКатегории");
	ТаблицаЗначений.Колонки.Добавить("ПредставлениеЗначенияРеквизитаКатегории");
	
	ТорговыеПредложенияПереопределяемый.ПолучитьСопоставленныеЗначенияРеквизитаВидаНоменклатуры(
		ОбъектСопоставления, РеквизитОбъекта, ТипЗначения, ТаблицаЗначений);
		
	Список.Загрузить(ТаблицаЗначений);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьИзмененияСервер()
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СоответствиеЗначенийРеквизитовБизнесСеть");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("ОбъектСопоставления", ОбъектСопоставления);
		ЭлементБлокировки.УстановитьЗначение("РеквизитОбъекта", РеквизитОбъекта);
		Блокировка.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.СоответствиеЗначенийРеквизитовБизнесСеть.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектСопоставления.Значение = ОбъектСопоставления;
		НаборЗаписей.Отбор.ОбъектСопоставления.Использование = Истина;
		НаборЗаписей.Отбор.РеквизитОбъекта.Значение = РеквизитОбъекта;
		НаборЗаписей.Отбор.РеквизитОбъекта.Использование = Истина;
		НаборЗаписей.Очистить();
		
		ТаблицаСписка = РеквизитФормыВЗначение("Список");
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СоответствиеЗначенийРеквизитовБизнесСеть");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("ОбъектСопоставления", ОбъектСопоставления);
		ЭлементБлокировки.УстановитьЗначение("РеквизитОбъекта", РеквизитОбъекта);
		ЭлементБлокировки.ИсточникДанных = ТаблицаСписка;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Значение", "Значение");
		Блокировка.Заблокировать();
		
		Для каждого ЭлементКоллекции Из ТаблицаСписка Цикл
			
			Если ЗначениеЗаполнено(ЭлементКоллекции.ПредставлениеЗначенияРеквизитаКатегории) Тогда
				Запись = НаборЗаписей.Добавить();
				Запись.ОбъектСопоставления = ОбъектСопоставления;
				Запись.РеквизитОбъекта     = РеквизитОбъекта;
				Запись.Значение            = ЭлементКоллекции.Значение;
				
				ЗначениеСервиса = СписокЗначенийСервиса.НайтиПоЗначению(ЭлементКоллекции.ПредставлениеЗначенияРеквизитаКатегории);
				Если ЗначениеСервиса = Неопределено Тогда
					Запись.ИдентификаторЗначенияРеквизитаКатегории = ЭлементКоллекции.ИдентификаторЗначенияРеквизитаКатегории;
					Запись.ПредставлениеЗначенияРеквизитаКатегории = ЭлементКоллекции.ПредставлениеЗначенияРеквизитаКатегории;
				Иначе
					Запись.ИдентификаторЗначенияРеквизитаКатегории = ЗначениеСервиса.Представление;
					Запись.ПредставлениеЗначенияРеквизитаКатегории = ЗначениеСервиса.Значение;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		НаборЗаписей.Записать(Истина);
		Модифицированность = Ложь;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ЭлектронноеВзаимодействиеСлужебный.ВыполнитьЗаписьСобытияПоЭДВЖурналРегистрации(
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), "БизнесСеть");
			
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Ошибка записи сопоставления'") + БизнесСетьКлиентСервер.ПодробностиВЖурналеРегистрации());
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	СохранитьИзмененияСервер();
	Модифицированность = Ложь; // не выводить подтверждение о закрытии формы еще раз.
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеЗначенияРеквизитаКатегорииПриИзменении(Элемент)
	
	Если Элементы.Список.ТекущиеДанные.ЗначениеНеактуально Тогда
		Элементы.Список.ТекущиеДанные.ЗначениеНеактуально = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Установка условного оформления для неактуального значения рубрикатора.
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПросроченныеДанныеЦвет);
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Представление.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ЗначениеНеактуально");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	// Надпись <Выберите значение>.
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЭДЦвет);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Выберите значение>'"));
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Представление.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ПредставлениеЗначенияРеквизитаКатегории");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "Значение" Тогда
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			СтандартнаяОбработка = Ложь;
			ПоказатьЗначение(, ТекущиеДанные.Значение)
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначенияВФоне(ПараметрыПроцедуры)

	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания	=
		НСтр("ru = '1С:Бизнес-сеть. Поиск значений реквизитов для сопоставления.'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("ТорговыеПредложения.ПолучитьЗначенияРеквизитаРубрикатора",
		ПараметрыПроцедуры, ПараметрыВыполнения);
	
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьЗначенияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияРезультата = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
	Если Не ЗначениеЗаполнено(ЗначенияРезультата) ИЛИ ТипЗнч(ЗначенияРезультата) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	Индекс = -1;
	КоличествоНесопоставленных = 0;
	Для каждого ЗначениеМассива Из ДополнительныеПараметры.Значения Цикл
		Индекс = Индекс + 1;
		Если ЗначенияРезультата[Индекс] = Неопределено Тогда
			КоличествоНесопоставленных = КоличествоНесопоставленных + 1;
			Продолжить;
		КонецЕсли;
		СтрокиПоиска = Список.НайтиСтроки(Новый Структура("Значение", ЗначениеМассива));
		СтрокиПоиска[0].ИдентификаторЗначенияРеквизитаКатегории = Формат(ЗначенияРезультата[Индекс].id, "ЧГ=");
		СтрокиПоиска[0].ПредставлениеЗначенияРеквизитаКатегории = ЗначенияРезультата[Индекс].value;
		СтрокиПоиска[0].ЗначениеНеактуально = Ложь;
		Модифицированность = Истина;
	КонецЦикла;
	
	// Вывод результата пользователю.
	Если КоличествоНесопоставленных > 0 Тогда
		Если КоличествоНесопоставленных = ДополнительныеПараметры.Значения.Количество() Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось сопоставить значения реквизитов со значениями сервиса.'");
		Иначе
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось сопоставить %1 из %2 значений реквизитов со значениями сервиса.'"),
				КоличествоНесопоставленных, ДополнительныеПараметры.Значения.Количество());
		КонецЕсли;
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
